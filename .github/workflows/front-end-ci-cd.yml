name: CI-CD for front end server

on:
  push:
    branches: ["main"]
    paths: ["frontend/**"]

jobs:
  test:
    name: run test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20" # or the version you are using

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm run test

  build-docker-images:
    name: Build docker images
    runs-on: ubuntu-latest

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v4

      - name: FRONT END - Build
        run: |
          docker build ./frontend --tag conquyhung/seal-idea-front-end \
            --build-arg SSL_PRIVATE_KEY="${{ secrets.SSL_PRIVATE_KEY }}" \
            --build-arg SSL_CRT="${{ secrets.SSL_CRT }}"
      - name: FRONT END - Tag
        run: docker tag conquyhung/seal-idea-front-end conquyhung/seal-idea-front-end:latest
      - name: FRONT END - Push
        run: docker push conquyhung/seal-idea-front-end:latest

  deploy-to-ec2:
    name: deploy to ec2
    runs-on: ubuntu-latest
    needs: [build-docker-images]

    steps:
      - uses: actions/checkout@v4
      - name: DEPLOY TO AWS - through ssh connection to ec2
        env:
          PRIVATE_KEY: ${{secrets.EC2_SSH_PRIVATE_KEY}}
          HOSTNAME: ${{secrets.EC2_SSH_HOST}}
          USER_NAME: ${{secrets.EC2_USER_NAME}}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} '
              # Now we have got the access of EC2 and we will start the deploy .
              # cd /home/ec2-user
              # Clean previous container and images
              docker stop seal-idea-front-end
              docker rm seal-idea-front-end
              docker rmi conquyhung/seal-idea-front-end:latest
              # Start new container and images
              docker pull conquyhung/seal-idea-front-end:latest
              docker run -d --name seal-idea-front-end -p 443:443 --add-host host.docker.internal:host-gateway conquyhung/seal-idea-front-end:latest
              '
